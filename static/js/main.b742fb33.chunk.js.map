{"version":3,"sources":["img/hot.jpg","img/normal.jpg","img/cold.jpg","App.js","index.js"],"names":["App","useState","place","setPlace","weather","setWeather","weatherapi","date","Date","date_week","getDay","date_month","getMonth","date_day","getDate","date_year","getFullYear","h","getHours","m","getMinutes","e","a","preventDefault","fetch","api","status","alert","json","data","console","log","className","src","Hot","onSubmit","type","placeholder","value","onChange","target","main","name","sys","country","Math","round","temp","temp_min","temp_max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,G,MCAA,ICAA,IFAA,IAA0B,iC,OGiF1BA,MA3Ef,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EACC,mCADDA,EAEC,2CAGDC,EAAO,IAAIC,KAGXC,EAFM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAEzDF,EAAKG,UACrBC,EAFQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,YAAa,YAErGJ,EAAKK,YACxBC,EAAWN,EAAKO,UAChBC,EAAYR,EAAKS,cAEjBC,EAAIV,EAAKW,WACTC,EAAIZ,EAAKa,aAnBF,4CAqBb,WAAyBC,GAAzB,iBAAAC,EAAA,6DACED,EAAEE,iBADJ,SAGoBC,MAAM,GAAD,OAAIlB,EAAJ,qBAA+BJ,EAA/B,+BAA2DI,IAHpF,UAKoB,OAFZmB,EAHR,QAKSC,OALT,gBAMIvB,EAAS,IACTwB,MAAM,oBAPV,wCAUiBF,EAAIG,OAVrB,QAUIC,EAVJ,OAWIxB,EAAWwB,GACX1B,EAAS,IACT2B,QAAQC,IAAI3B,GAbhB,6CArBa,sBAsCb,OACE,sBAAK4B,UAAU,MAAf,UACE,qBAAKC,IAAKC,IACV,sBAAKF,UAAU,gBAAf,UACE,+BAAKf,EAAL,IAASE,KACT,oBAAIa,UAAU,OAAd,yBACA,sBAAMG,SA5CC,4CA4CoBH,UAAU,eAArC,SACE,uBAAOI,KAAK,OAAOC,YAAY,YAAYC,MAAOpC,EAAOqC,SAAU,SAAClB,GAAD,OAAOlB,EAASkB,EAAEmB,OAAOF,QAAQN,UAAU,kBAItF,qBAAjB5B,EAAQqC,KAAyB,GACzC,8BACC,sBAAKT,UAAU,SAAf,UACE,+BAAK5B,EAAQsC,KAAb,KAAqBtC,EAAQuC,IAAIC,WACjC,oBAAGZ,UAAU,QAAb,UAAsBvB,EAAtB,IAAkCI,EAAlC,IAA6CF,EAA7C,IAA0DI,KAC1D,+BAAK8B,KAAKC,MAAM1C,EAAQqC,KAAKM,MAA7B,WAEA,sBAAKf,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,+BAAKa,KAAKC,MAAM1C,EAAQqC,KAAKO,UAA7B,WACA,uCAEF,qBAAKhB,UAAU,YACf,sBAAKA,UAAU,MAAf,UACE,+BAAKa,KAAKC,MAAM1C,EAAQqC,KAAKQ,UAA7B,WACA,sDClEhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b742fb33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hot.b58dbea9.jpg\";","export default __webpack_public_path__ + \"static/media/normal.5a2186d3.jpg\";","export default __webpack_public_path__ + \"static/media/cold.a2f64ac3.jpg\";","import React, { useState } from 'react';\nimport './App.css';\nimport Normal from './img/normal.jpg';\nimport Cold from './img/cold.jpg';\nimport Hot from './img/hot.jpg';\n\nfunction App() {\n\n  const [place, setPlace] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const weatherapi = {\n    key: \"345b981f5ba3b41e6b059759215016d6\",\n    url: \"https://api.openweathermap.org/data/2.5/\"\n  }\n\n  const date = new Date();\n  const day = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n  const date_week = day[date.getDay()];\n  const date_month = month[date.getMonth()];\n  const date_day = date.getDate();\n  const date_year = date.getFullYear();\n\n  const h = date.getHours();\n  const m = date.getMinutes();\n\n  async function searchApi(e){\n    e.preventDefault();\n\n    const api = await fetch(`${weatherapi.url}weather?q=${place}&units=metric&appid=${weatherapi.key}`);\n    let data;\n    if(api.status === 404){\n      setPlace('');\n      alert(\"Place not found.\");\n    }\n    else{\n      data = await api.json()\n      setWeather(data)\n      setPlace('');\n      console.log(weather);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <img src={Hot} />\n      <div className=\"app-container\">\n        <h1>{h}:{m}</h1>\n        <h1 className=\"logo\">Weather App</h1>\n        <form onSubmit={searchApi} className=\"form-control\">\n          <input type=\"text\" placeholder=\"Search...\" value={place} onChange={(e) => setPlace(e.target.value)} className=\"input-field\" />\n          {/* <button type=\"submit\" className=\"btn\">Search</button> */}\n        </form>\n\n        {(typeof weather.main === \"undefined\") ? ('') : \n        (<div>\n          <div className=\"result\">\n            <h2>{weather.name}, {weather.sys.country}</h2>\n            <p className=\"place\">{date_week} {date_day} {date_month} {date_year}</p>\n            <h3>{Math.round(weather.main.temp)}°c</h3>\n\n            <div className=\"min-max\">\n              <div className=\"min\">\n                <h4>{Math.round(weather.main.temp_min)}°c</h4>\n                <p>min</p>\n              </div>\n              <div className=\"divider\"></div>\n              <div className=\"min\">\n                <h4>{Math.round(weather.main.temp_max)}°c</h4>\n                <p>max</p>\n              </div>\n            </div>\n          </div>\n        </div>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}